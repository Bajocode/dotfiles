#!/bin/zsh

# macos
alias defsread='defaults read -g NSUserKeyEquivalents'

# Shell
alias vshell='vim ~/.shell'
alias valias='vim ~/.alias'
alias vcode='vim $HOME/Library/Application\ Support/Code/User/settings.json'
alias zshrc='vim ~/.zshrc'
alias bashrc='vim ~/.bashrc'
alias szshrc='source ~/.zshrc'
alias sbashrc='source ~/.bashrc'
alias lsh='ls -ld .?*'
alias ccat='pygmentize -f terminal256 -O style=native -g'
alias cdd='cd ~/dev'
alias cdvi='cd ~/dev/office/vinturas'
alias cdf='cd ~/dev/portfolio/fabijanbajo.com'
alias cdn='cd ~/dev/portfolio/notesapp-microservices-ios'
alias cdi='cd ~/Dropbox/interview'
alias c='cat'
alias ports='lsof -PiTCP -sTCP:LISTEN'
exportfile() { export $(grep -v '^#' $1 | xargs -0) }

# Vim
alias vimUpdatePlugins='cd ~/.vim_runtime && git pull --rebase'
alias vimrc='vim ~/.vim_runtime/my_configs.vim'

# Node
tsupdate() { cat $1 > ~/dev/own/backend/ts-starter/$1; }
yarnts() {
  for package in "$@"
  do
    yarn add $package && yarn add -D @types/$package
  done
}
npmts() {
  for package in "$@"
  do
    npm install $package && npm install -D @types/$package
  done
}
alias tsinit='cp -a ~/dev/own/backend/ts-starter/. .; npm i -D typescript tslint tslint-config-airbnb rimraf tsc-watch; npm run build'
alias yrw='yarn run watch'
alias nrw='npm run watch'

# Webstorm
alias ws='open -a /Applications/WebStorm.app'

# Docker
alias drmia='docker rmi $(docker images -q)'
alias drma='docker rm $(docker ps -a -q)'
alias dil='docker image list'
alias dcl='docker container ls'
alias dipi='docker image prune --filter label=stage=intermediate -f'
alias drmaia='drma -f; drmia -f'
alias dcu='docker-compose up'
dbvi() {
  local repository=$1
  local tag="${2:-latest}"
  local dockerfile="${3:-Dockerfile}"
  local full=de.icr.io/vin-dev/${repository}:${tag}
  
  docker build --no-cache -f $dockerfile -t $full . && docker push $full
}
dbf() {
  local repository=$1
  local tag="${2:-latest}"
  local dockerfile="${3:-Dockerfile}"
  local full=gcr.io/fabijanbajo/${repository}:${tag}
  
  docker build --no-cache -f $dockerfile -t $full . && docker push $full
}

# Kubernetes
alias k='kubectl'
alias kg='kubectl get'
alias ke='kubectl explain'
alias kds='kubectl describe'
alias kdl='kubectl delete'
alias kgn='kubectl get nodes'
alias kgp='kubectl get pods'
alias kgd='kubectl get deployments'
alias kge='kubectl get events'
alias kgs='kubectl get services'
alias kga='kubectl get all'
alias kdp='kubectl describe pods'
alias kdn='kubectl describe nodes'
alias kds='kubectl describe service'
alias kdd='kubectl describe deployments'
alias kda='kubectl delete all --all'
alias rb="rolebinding"
alias crb="clusterrolebinding"
alias kbb="kubectl run busybox --image=busybox:1.28 --rm -it --restart=Never --command --"
alias kx="kubectx"
alias kn="kubens"
alias kcurl="kubectl run curl --image=radial/busyboxplus:curl -i --tty --rm"
function webhook_helm_sync() {
  helm package ~/dev/portfolio/k8s-webhook/k8s-webhook -d ~/dev/portfolio/helmcharts  && \
  helm repo index ~/dev/portfolio/helmcharts --url https://bajocode.github.io/helmcharts/ && \
  cd ~/dev/portfolio/helmcharts && gacp "Update k8s-webhooks helm configuration" > /dev/null 2>&1 && \
  helm repo update
}
function switch_helm() {
  if [[ $(helm version --short) == *"v2"* ]]; then 
    brew unlink helm@2 && brew link helm
  elif [[ $(helm version --short) == *"v3"* ]]; then
    brew unlink helm && brew link helm@2 --force
  fi
  exec $SHELL && source .zshrc
}
function copy_gcloud_pullsecrets() {
  from_ns=$1
  to_ns=$2

  kubectl get secret gcr-secret \
    --namespace=$from_ns \
    --export -o yaml | kubectl apply --namespace=$to_ns -f -

  kubectl patch serviceaccounts default \
    --namespace=$to_ns \
    -p '{"imagePullSecrets": [{"name": "gcr-secret"}]}'
}

# Notes
alias n='cd /Users/fabijanbajo/Dropbox/dev/notes; vim'

# Articles
alias a='cd /Users/fabijanbajo/Dropbox/system/articles; vim'

# Carreer
alias c='cd ~/Dropbox/career && open .'

# Jupyter notebook
alias jn='jupyter notebook'

# Git
gremote_gitlab_personal() { git remote add origin git@personal.gitlab.com:Bajocode/$1.git; }
gacp() { git add -A && git commit -m $1 && git push; }
alias gitinit='cp -a ~/dev/own/backend/git-starter/. .'
alias gcd='git checkout development'
alias gcm='git checkout master'
alias greset='git add . && git reset --hard'
alias gp='git pull'
alias gs='git status'
alias gl='git log --stat'
alias gac='git add . && git commit -m'
alias dot='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias dots='dot status'
alias dotd='dot diff'
alias dotl='dot log --stat'
alias dotp='dot pull && exec $SHELL && szshrc '
alias dotsync='$HOME/dot-sync && source $HOME/.zshrc'
alias wfsync='$HOME/workflow-sync && source $HOME/.zshrc'
alias wfservices='cd $HOME/.workflow/services && open .'
alias wfshortcuts='vim $HOME/.workflow/shortcuts'
wfacp() { dot add $HOME/.workflow && dot commit -m $1 && dot push; }
dotcp() { dot add -u && dot commit -m $1 && dot push; }
gprune() { git fetch -p && for branch in `git branch -vv --no-color | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done }

# Kobo export
alias kobo='cp /Volumes/KOBOeReader/.kobo/KoboReader.sqlite ~/Desktop/; export-kobo.py ~/Desktop/KoboReader.sqlite --highlights-only --output ~/Desktop/highlights.txt; rm ~/Desktop/KoboReader.sqlite'

# IBM cloud
alias ic='ibmcloud'
alias icb='ic billing resource-group-usage Vinturas-Dev'
alias icd='open https://eu-de.containers.cloud.ibm.com/kubeproxy/clusters/3dcb2622595f41aab94ebd5818f17cb1/service/#!/overview?namespace=_all'
alias ics='ic ks messages && ic billing resource-group-usage Vinturas-Dev && ic ks cluster-get --cluster vin-dev'
alias icclusters='ibmcloud ks clusters -s | awk '\''{print $1}'\'' | xargs -I {} ibmcloud ks cluster config --cluster {}'
alias icl='ic login --sso'

# Hetzner cloud
alias hc='hcloud'

# Google cloud
alias gc='gcloud'

# python
alias python=/usr/local/bin/python3

# VirtualBox
alias vm='VBoxManage'

# local alias
source ~/.alias.local
